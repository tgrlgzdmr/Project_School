<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>